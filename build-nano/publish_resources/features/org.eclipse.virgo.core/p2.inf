requires.0.name = toolingorg.eclipse.virgo.kernel.core
requires.0.namespace = org.eclipse.equinox.p2.iu
requires.0.optional = true

units.0.id = toolingorg.eclipse.virgo.kernel.core
units.0.version = 1.0.0
units.0.requires.0.name = org.eclipse.virgo.kernel.core
units.0.requires.0.namespace = osgi.bundle
units.0.requires.1.name = bundle
units.0.requires.1.namespace = org.eclipse.equinox.p2.eclipse.type
units.0.requires.1.greedy = false
units.0.requires.1.range = 0.0.0
units.0.hostRequirements.0.name = org.eclipse.virgo.kernel.core
units.0.hostRequirements.0.namespace = osgi.bundle
units.0.hostRequirements.1.name = bundle
units.0.hostRequirements.1.namespace = org.eclipse.equinox.p2.eclipse.type
units.0.hostRequirements.1.greedy = false
units.0.hostRequirements.1.range = 0.0.0
units.0.properties.0.name = org.eclipse.equinox.p2.type.fragment
units.0.properties.0.value = true
units.0.provides.0.name = toolingorg.eclipse.virgo.kernel.core
units.0.provides.0.namespace = org.eclipse.equinox.p2.iu
units.0.provides.1.name = tooling
units.0.provides.1.namespace = org.eclipse.equinox.p2.flavor
units.0.provides.1.version = 1.0.0
units.0.touchpoint.id = org.eclipse.equinox.p2.osgi
units.0.touchpoint.version = 1.0.0
units.0.instructions.install = installBundle(bundle:${artifact})
units.0.instructions.uninstall = uninstallBundle(bundle:${artifact})
units.0.instructions.configure = markStarted(started: true);
units.0.instructions.unconfigure = markStarted(started: false);
