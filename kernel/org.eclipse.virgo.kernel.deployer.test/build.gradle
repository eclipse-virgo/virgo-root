test.dependsOn ':3rd-party:bundles'

apply plugin: 'idea'
idea {
    module {
        inheritOutputDirs = true
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/java/test"
}
processTestResources.dependsOn copyTestResources

test {
    maxHeapSize = '1G'
}

dependencies {
    testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
    testCompile project(':test:org.eclipse.virgo.test.stubs')
    testCompile project(':test:org.eclipse.virgo.test.framework')

    // some the libraries are used by configuration items during integration tests -> testRuntime
    // @see org.eclipse.virgo.kernel.userregion.properties and others
    testRuntime group: "org.slf4j", name: "jcl-over-slf4j", version: slf4jVersion
    testRuntime "org.aspectj:aspectjrt:${project.aspectjVersion}"

    testCompile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
    testCompile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"

    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.console", version: equinoxConsoleVersion, configuration: "compile", ext: "jar"
    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.event", version: equinoxEventVersion, configuration: "compile", ext: "jar"
    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"
    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.util", version: equinoxUtilVersion, configuration: "compile", ext: "jar"
    testCompile group: "org.hsqldb", name:"hsqldb", version: hsqldbVersion

    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.apache.felix.gogo.command", version: gogoCommandVersion, configuration: "compile", ext: "jar"
    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.apache.felix.gogo.runtime", version: gogoRuntimeVersion, configuration: "compile", ext: "jar"
    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.apache.felix.gogo.shell", version: gogoShellVersion, configuration: "compile", ext: "jar"

    testImplementation 'org.springframework:spring-context'
    testRuntimeOnly 'org.springframework:spring-expression'

    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.apache.commons.dbcp", version: commonsDbcpVersion, configuration: "compile", ext: "jar"
    testRuntime group: "org.eclipse.virgo.mirrored", name: "org.apache.commons.pool", version: commonsPoolVersion, configuration: "compile", ext: "jar"

    testCompile project(':util:org.eclipse.virgo.util.parser.launcher')
    testCompile project(':util:org.eclipse.virgo.util.osgi')
    testCompile project(':util:org.eclipse.virgo.util.osgi.manifest')
    testCompile project(':util:org.eclipse.virgo.util.parser.manifest')
    testCompile project(':medic:org.eclipse.virgo.medic')
    testCompile project(':medic:org.eclipse.virgo.medic.core')
    testCompile project(':medic:org.eclipse.virgo.medic.logbackcorefragment')
    testCompile project(':medic:org.eclipse.virgo.medic.logbackclassicfragment')
    testCompile project(':nano:org.eclipse.virgo.nano.core')
    testCompile project(':nano:org.eclipse.virgo.nano.management')
    testCompile project(':kernel:org.eclipse.virgo.kernel.agent.dm')
    testCompile project(':kernel:org.eclipse.virgo.kernel.deployer')
    testCompile project(':kernel:org.eclipse.virgo.kernel.dmfragment')
    testCompile project(':kernel:org.eclipse.virgo.kernel.kerneldmfragment')
    testCompile project(':kernel:org.eclipse.virgo.kernel.equinox.extensions')
    testCompile project(':kernel:org.eclipse.virgo.kernel.userregion')
    testCompile project(':kernel:org.eclipse.virgo.kernel.userregionfactory')
    testCompile project(':kernel:org.eclipse.virgo.shell.command')
    testCompile project(':kernel:org.eclipse.virgo.kernel.osgi')
}
